package uk.gov.hmcts.juror.api.moj.report.bespoke;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import uk.gov.hmcts.juror.api.AbstractControllerIntegrationTest;
import uk.gov.hmcts.juror.api.moj.controller.reports.response.FinancialAuditReportResponse;
import uk.gov.hmcts.juror.api.moj.controller.request.JurorAddressDto;
import uk.gov.hmcts.juror.api.moj.controller.request.expense.CombinedExpenseDetailsDto;
import uk.gov.hmcts.juror.api.moj.controller.request.expense.ExpenseDetailsWithOriginalDto;
import uk.gov.hmcts.juror.api.moj.controller.request.expense.ExpenseDetailsWithTotalsDto;
import uk.gov.hmcts.juror.api.moj.controller.request.expense.ExpenseTotal;
import uk.gov.hmcts.juror.api.moj.controller.response.FilterableJurorDetailsResponseDto;
import uk.gov.hmcts.juror.api.moj.controller.response.NameDetails;
import uk.gov.hmcts.juror.api.moj.controller.response.PaymentDetails;
import uk.gov.hmcts.juror.api.moj.domain.FinancialAuditDetails;
import uk.gov.hmcts.juror.api.moj.domain.UserType;
import uk.gov.hmcts.juror.api.moj.domain.authentication.UserDetailsSimpleDto;
import uk.gov.hmcts.juror.api.moj.enumeration.AttendanceType;
import uk.gov.hmcts.juror.api.moj.enumeration.PaymentMethod;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Set;

@ExtendWith(SpringExtension.class)
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
@DisplayName("Controller: " + FinancialAuditReportsITest.URL)
@Sql({
    "/db/truncate.sql",
    "/db/mod/truncate.sql",
    "/db/administration/createUsers.sql",
    "/db/mod/reports/FinancialAuditReportsITest_typical.sql"
})
@SuppressWarnings("PMD.JUnitTestsShouldIncludeAssert"//False positive
)
class FinancialAuditReportsITest extends AbstractControllerIntegrationTest<Void, FinancialAuditReportResponse> {
    public static final String URL = "/api/v1/moj/reports/financial-audit";

    @Autowired
    public FinancialAuditReportsITest(TestRestTemplate template) {
        super(HttpMethod.GET, template, HttpStatus.OK);
    }

    @Override
    protected String getValidUrl() {
        return URL;
    }

    @Override
    protected String getValidJwt() {
        return createJwt(
            "test_court_standard",
            "415",
            UserType.COURT,
            Set.of(),
            "415"
        );
    }

    @Override
    protected Void getValidPayload() {
        return null;
    }

    @Test
    void viewForApproval() {
        testBuilder()
            .addQueryParam("audit-number", "F91")
            .triggerValid()
            .assertEquals(FinancialAuditReportResponse.builder()
                .financialAuditNumber("F91")
                .auditType(FinancialAuditDetails.Type.FOR_APPROVAL)
                .jurorDetails(FilterableJurorDetailsResponseDto.builder()
                    .jurorNumber("200106974")
                    .jurorVersion(42_257L)
                    .nameDetails(NameDetails.builder()
                        .title("Ms")
                        .firstName("Josh")
                        .lastName("Gallus")
                        .build())
                    .paymentDetails(PaymentDetails.builder()
                        .sortCode("901234")
                        .bankAccountName("Josh Gallus")
                        .bankAccountNumber("12345678")
                        .buildingSocietyRollNumber(null)
                        .build())
                    .address(JurorAddressDto.builder()
                        .lineOne("68 EWP Junction")
                        .lineTwo("Box Number 0")
                        .lineThree("Canterbury")
                        .town("Shetland (Zetland)")
                        .county(null)
                        .postcode("BB2 2TG")
                        .build())
                    .mileage(11)
                    .build())
                .originalJurorDetails(null)
                .submittedAt(LocalDateTime.parse("2024-04-18T12:30:56.922"))
                .submittedBy(UserDetailsSimpleDto.builder()
                    .username("test_court_standard")
                    .email("test_court_standard@email.gov.uk")
                    .name("Court Standard")
                    .build())
                .approvedAt(null)
                .approvedBy(null)
                .expenses(CombinedExpenseDetailsDto.<ExpenseDetailsWithOriginalDto>builder()
                    .expenseDetails(List.of(ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-03-25"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("5.71"))
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-03-26"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("12.17"))
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-03-27"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("0.00"))
                            .smartCard(new BigDecimal("1.00"))
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-03-28"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(BigDecimal.ZERO)
                            .smartCard(BigDecimal.ZERO)
                            .build()))
                    .total(ExpenseTotal.<ExpenseDetailsWithOriginalDto>builder()
                        .totalDays(4)
                        .lossOfEarnings(new BigDecimal("88.00"))
                        .extraCare(BigDecimal.ZERO)
                        .other(BigDecimal.ZERO)
                        .publicTransport(new BigDecimal("0.00"))
                        .taxi(new BigDecimal("0.00"))
                        .motorcycle(BigDecimal.ZERO)
                        .car(new BigDecimal("17.52"))
                        .bicycle(BigDecimal.ZERO)
                        .parking(new BigDecimal("0.00"))
                        .foodAndDrink(new BigDecimal("17.88"))
                        .smartCard(new BigDecimal("1.00"))
                        .totalPaid(BigDecimal.ZERO)
                        .totalDue(new BigDecimal("122.40"))
                        .build())
                    .build())
                .build());
    }

    @Test
    void viewEditedForApproval() {
        testBuilder()
            .addQueryParam("audit-number", "F93")
            .triggerValid()
            .assertEquals(FinancialAuditReportResponse.builder()
                .financialAuditNumber("F93")
                .auditType(FinancialAuditDetails.Type.FOR_APPROVAL_EDIT)
                .jurorDetails(FilterableJurorDetailsResponseDto.builder()
                    .jurorNumber("200106974")
                    .jurorVersion(42_257L)
                    .nameDetails(NameDetails.builder()
                        .title("Ms")
                        .firstName("Josh")
                        .lastName("Gallus")
                        .build())
                    .paymentDetails(PaymentDetails.builder()
                        .sortCode("901234")
                        .bankAccountName("Josh Gallus")
                        .bankAccountNumber("12345678")
                        .buildingSocietyRollNumber(null)
                        .build())
                    .address(JurorAddressDto.builder()
                        .lineOne("68 EWP Junction")
                        .lineTwo("Box Number 0")
                        .lineThree("Canterbury")
                        .town("Shetland (Zetland)")
                        .county(null)
                        .postcode("BB2 2TG")
                        .build())
                    .mileage(11)
                    .build())
                .originalJurorDetails(FilterableJurorDetailsResponseDto.builder()
                    .jurorNumber("200106974")
                    .jurorVersion(42_257L)
                    .nameDetails(NameDetails.builder()
                        .title("Ms")
                        .firstName("Josh")
                        .lastName("Gallus")
                        .build())
                    .paymentDetails(PaymentDetails.builder()
                        .sortCode("901234")
                        .bankAccountName("Josh Gallus")
                        .bankAccountNumber("12345678")
                        .buildingSocietyRollNumber(null)
                        .build())
                    .address(JurorAddressDto.builder()
                        .lineOne("68 EWP Junction")
                        .lineTwo("Box Number 0")
                        .lineThree("Canterbury")
                        .town("Shetland (Zetland)")
                        .county(null)
                        .postcode("BB2 2TG")
                        .build())
                    .mileage(11)
                    .build())
                .submittedAt(LocalDateTime.parse("2024-04-20T12:31:54.736"))
                .submittedBy(UserDetailsSimpleDto.builder()
                    .username("test_court_standard")
                    .email("test_court_standard@email.gov.uk")
                    .name("Court Standard")
                    .build())
                .approvedAt(null)
                .approvedBy(null)
                .expenses(CombinedExpenseDetailsDto.<ExpenseDetailsWithOriginalDto>builder()
                    .expenseDetails(List.of(ExpenseDetailsWithOriginalDto.builder()
                            .original(ExpenseDetailsWithTotalsDto.builder()
                                .attendanceDate(LocalDate.parse("2024-04-05"))
                                .attendanceType(AttendanceType.FULL_DAY)
                                .paymentMethod(PaymentMethod.BACS)
                                .lossOfEarnings(new BigDecimal("22.00"))
                                .extraCare(BigDecimal.ZERO)
                                .other(BigDecimal.ZERO)
                                .publicTransport(new BigDecimal("0.00"))
                                .taxi(new BigDecimal("0.00"))
                                .motorcycle(BigDecimal.ZERO)
                                .car(new BigDecimal("4.38"))
                                .bicycle(BigDecimal.ZERO)
                                .parking(new BigDecimal("0.00"))
                                .foodAndDrink(BigDecimal.ZERO)
                                .smartCard(BigDecimal.ZERO)
                                .build())
                            .attendanceDate(LocalDate.parse("2024-04-05"))
                            .attendanceType(AttendanceType.HALF_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("0.00"))
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(ExpenseDetailsWithTotalsDto.builder()
                                .attendanceDate(LocalDate.parse("2024-04-08"))
                                .attendanceType(AttendanceType.FULL_DAY_LONG_TRIAL)
                                .paymentMethod(PaymentMethod.BACS)
                                .lossOfEarnings(new BigDecimal("22.00"))
                                .extraCare(BigDecimal.ZERO)
                                .other(BigDecimal.ZERO)
                                .publicTransport(new BigDecimal("0.00"))
                                .taxi(new BigDecimal("0.00"))
                                .motorcycle(BigDecimal.ZERO)
                                .car(new BigDecimal("4.38"))
                                .bicycle(BigDecimal.ZERO)
                                .parking(new BigDecimal("0.00"))
                                .foodAndDrink(BigDecimal.ZERO)
                                .smartCard(BigDecimal.ZERO)
                                .build())
                            .attendanceDate(LocalDate.parse("2024-04-08"))
                            .attendanceType(AttendanceType.HALF_DAY_LONG_TRIAL)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("0.00"))
                            .smartCard(BigDecimal.ZERO)
                            .build()))
                    .total(ExpenseTotal.<ExpenseDetailsWithOriginalDto>builder()
                        .totalDays(2)
                        .lossOfEarnings(new BigDecimal("44.00"))
                        .extraCare(BigDecimal.ZERO)
                        .other(BigDecimal.ZERO)
                        .publicTransport(new BigDecimal("0.00"))
                        .taxi(new BigDecimal("0.00"))
                        .motorcycle(BigDecimal.ZERO)
                        .car(new BigDecimal("8.76"))
                        .bicycle(BigDecimal.ZERO)
                        .parking(new BigDecimal("0.00"))
                        .foodAndDrink(new BigDecimal("0.00"))
                        .smartCard(BigDecimal.ZERO)
                        .totalPaid(BigDecimal.ZERO)
                        .totalDue(new BigDecimal("52.76"))
                        .build())
                    .build())
                .build());
    }

    @Test
    void viewApproval() {
        testBuilder()
            .addQueryParam("audit-number", "F94")
            .triggerValid()
            .assertEquals(FinancialAuditReportResponse.builder()
                .financialAuditNumber("F94")
                .auditType(FinancialAuditDetails.Type.APPROVED_BACS)
                .jurorDetails(FilterableJurorDetailsResponseDto.builder()
                    .jurorNumber("200106974")
                    .jurorVersion(42_257L)
                    .nameDetails(NameDetails.builder()
                        .title("Ms")
                        .firstName("Josh")
                        .lastName("Gallus")
                        .build())
                    .paymentDetails(PaymentDetails.builder()
                        .sortCode("901234")
                        .bankAccountName("Josh Gallus")
                        .bankAccountNumber("12345678")
                        .buildingSocietyRollNumber(null)
                        .build())
                    .address(JurorAddressDto.builder()
                        .lineOne("68 EWP Junction")
                        .lineTwo("Box Number 0")
                        .lineThree("Canterbury")
                        .town("Shetland (Zetland)")
                        .county(null)
                        .postcode("BB2 2TG")
                        .build())
                    .mileage(11)
                    .build())
                .originalJurorDetails(null)
                .submittedAt(LocalDateTime.parse("2024-04-20T12:31:54.736"))
                .submittedBy(UserDetailsSimpleDto.builder()
                    .username("test_court_standard")
                    .email("test_court_standard@email.gov.uk")
                    .name("Court Standard")
                    .build())
                .approvedAt(LocalDateTime.parse("2024-04-21T12:32:26.614"))
                .approvedBy(UserDetailsSimpleDto.builder()
                    .username("test_court_manager")
                    .email("test_court_manager@email.gov.uk")
                    .name("Court Manager")
                    .build())
                .expenses(CombinedExpenseDetailsDto.<ExpenseDetailsWithOriginalDto>builder()
                    .expenseDetails(List.of(ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-03-25"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("5.71"))
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-03-26"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("12.17"))
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-03-27"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("0.00"))
                            .smartCard(new BigDecimal("1.00"))
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-03-28"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(BigDecimal.ZERO)
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-03-29"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(BigDecimal.ZERO)
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-04-01"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(BigDecimal.ZERO)
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-04-02"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(BigDecimal.ZERO)
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-04-03"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(BigDecimal.ZERO)
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-04-04"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(BigDecimal.ZERO)
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-04-05"))
                            .attendanceType(AttendanceType.HALF_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("0.00"))
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(null)
                            .attendanceDate(LocalDate.parse("2024-04-08"))
                            .attendanceType(AttendanceType.HALF_DAY_LONG_TRIAL)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(BigDecimal.ZERO)
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.38"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("0.00"))
                            .smartCard(BigDecimal.ZERO)
                            .build()))
                    .total(ExpenseTotal.<ExpenseDetailsWithOriginalDto>builder()
                        .totalDays(11)
                        .lossOfEarnings(new BigDecimal("242.00"))
                        .extraCare(BigDecimal.ZERO)
                        .other(BigDecimal.ZERO)
                        .publicTransport(new BigDecimal("0.00"))
                        .taxi(new BigDecimal("0.00"))
                        .motorcycle(BigDecimal.ZERO)
                        .car(new BigDecimal("48.18"))
                        .bicycle(BigDecimal.ZERO)
                        .parking(new BigDecimal("0.00"))
                        .foodAndDrink(new BigDecimal("17.88"))
                        .smartCard(new BigDecimal("1.00"))
                        .totalPaid(new BigDecimal("307.06"))
                        .totalDue(new BigDecimal("307.06"))
                        .build())
                    .build())
                .build());
    }

    @Test
    void viewEditedApproval() {
        testBuilder()
            .addQueryParam("audit-number", "F95")
            .triggerValid()
            .assertEquals(FinancialAuditReportResponse.builder()
                .financialAuditNumber("F95")
                .auditType(FinancialAuditDetails.Type.APPROVED_EDIT)
                .jurorDetails(FilterableJurorDetailsResponseDto.builder()
                    .jurorNumber("200106974")
                    .jurorVersion(42_257L)
                    .nameDetails(NameDetails.builder()
                        .title("Ms")
                        .firstName("Josh")
                        .lastName("Gallus")
                        .build())
                    .paymentDetails(PaymentDetails.builder()
                        .sortCode("901234")
                        .bankAccountName("Josh Gallus")
                        .bankAccountNumber("12345678")
                        .buildingSocietyRollNumber(null)
                        .build())
                    .address(JurorAddressDto.builder()
                        .lineOne("68 EWP Junction")
                        .lineTwo("Box Number 0")
                        .lineThree("Canterbury")
                        .town("Shetland (Zetland)")
                        .county(null)
                        .postcode("BB2 2TG")
                        .build())
                    .mileage(11)
                    .build())
                .originalJurorDetails(FilterableJurorDetailsResponseDto.builder()
                    .jurorNumber("200106974")
                    .jurorVersion(42_257L)
                    .nameDetails(NameDetails.builder()
                        .title("Ms")
                        .firstName("Josh")
                        .lastName("Gallus")
                        .build())
                    .paymentDetails(PaymentDetails.builder()
                        .sortCode("901234")
                        .bankAccountName("Josh Gallus")
                        .bankAccountNumber("12345678")
                        .buildingSocietyRollNumber(null)
                        .build())
                    .address(JurorAddressDto.builder()
                        .lineOne("68 EWP Junction")
                        .lineTwo("Box Number 0")
                        .lineThree("Canterbury")
                        .town("Shetland (Zetland)")
                        .county(null)
                        .postcode("BB2 2TG")
                        .build())
                    .mileage(11)
                    .build())
                .submittedAt(LocalDateTime.parse("2024-04-22T12:38:15.223"))
                .submittedBy(UserDetailsSimpleDto.builder()
                    .username("test_court_standard")
                    .email("test_court_standard@email.gov.uk")
                    .name("Court Standard")
                    .build())
                .approvedAt(null)
                .approvedBy(null)
                .expenses(CombinedExpenseDetailsDto.<ExpenseDetailsWithOriginalDto>builder()
                    .expenseDetails(List.of(ExpenseDetailsWithOriginalDto.builder()
                            .original(ExpenseDetailsWithTotalsDto.builder()
                                .attendanceDate(LocalDate.parse("2024-03-25"))
                                .attendanceType(AttendanceType.FULL_DAY)
                                .paymentMethod(PaymentMethod.BACS)
                                .lossOfEarnings(new BigDecimal("22.00"))
                                .extraCare(BigDecimal.ZERO)
                                .other(BigDecimal.ZERO)
                                .publicTransport(new BigDecimal("0.00"))
                                .taxi(new BigDecimal("0.00"))
                                .motorcycle(BigDecimal.ZERO)
                                .car(new BigDecimal("4.38"))
                                .bicycle(BigDecimal.ZERO)
                                .parking(new BigDecimal("0.00"))
                                .foodAndDrink(new BigDecimal("5.71"))
                                .smartCard(BigDecimal.ZERO)
                                .build())
                            .attendanceDate(LocalDate.parse("2024-03-25"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(new BigDecimal("10.00"))
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.78"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("5.71"))
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(ExpenseDetailsWithTotalsDto.builder()
                                .attendanceDate(LocalDate.parse("2024-03-26"))
                                .attendanceType(AttendanceType.FULL_DAY)
                                .paymentMethod(PaymentMethod.BACS)
                                .lossOfEarnings(new BigDecimal("22.00"))
                                .extraCare(BigDecimal.ZERO)
                                .other(BigDecimal.ZERO)
                                .publicTransport(new BigDecimal("0.00"))
                                .taxi(new BigDecimal("0.00"))
                                .motorcycle(BigDecimal.ZERO)
                                .car(new BigDecimal("4.38"))
                                .bicycle(BigDecimal.ZERO)
                                .parking(new BigDecimal("0.00"))
                                .foodAndDrink(new BigDecimal("12.17"))
                                .smartCard(BigDecimal.ZERO)
                                .build())
                            .attendanceDate(LocalDate.parse("2024-03-26"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(new BigDecimal("10.00"))
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.78"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("12.17"))
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(ExpenseDetailsWithTotalsDto.builder()
                                .attendanceDate(LocalDate.parse("2024-03-27"))
                                .attendanceType(AttendanceType.FULL_DAY)
                                .paymentMethod(PaymentMethod.BACS)
                                .lossOfEarnings(new BigDecimal("22.00"))
                                .extraCare(BigDecimal.ZERO)
                                .other(BigDecimal.ZERO)
                                .publicTransport(new BigDecimal("0.00"))
                                .taxi(new BigDecimal("0.00"))
                                .motorcycle(BigDecimal.ZERO)
                                .car(new BigDecimal("4.38"))
                                .bicycle(BigDecimal.ZERO)
                                .parking(new BigDecimal("0.00"))
                                .foodAndDrink(new BigDecimal("0.00"))
                                .smartCard(new BigDecimal("1.00"))
                                .build())
                            .attendanceDate(LocalDate.parse("2024-03-27"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(new BigDecimal("10.00"))
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.78"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("0.00"))
                            .smartCard(new BigDecimal("1.00"))
                            .build()))
                    .total(ExpenseTotal.<ExpenseDetailsWithOriginalDto>builder()
                        .totalDays(3)
                        .lossOfEarnings(new BigDecimal("66.00"))
                        .extraCare(new BigDecimal("30.00"))
                        .other(BigDecimal.ZERO)
                        .publicTransport(new BigDecimal("0.00"))
                        .taxi(new BigDecimal("0.00"))
                        .motorcycle(BigDecimal.ZERO)
                        .car(new BigDecimal("14.34"))
                        .bicycle(BigDecimal.ZERO)
                        .parking(new BigDecimal("0.00"))
                        .foodAndDrink(new BigDecimal("17.88"))
                        .smartCard(new BigDecimal("1.00"))
                        .totalPaid(new BigDecimal("96.02"))
                        .totalDue(new BigDecimal("127.22"))
                        .build())
                    .build())
                .build());
    }

    @Test
    void viewReApproval() {
        testBuilder()
            .addQueryParam("audit-number", "F96")
            .triggerValid()
            .assertEquals(FinancialAuditReportResponse.builder()
                .financialAuditNumber("F96")
                .auditType(FinancialAuditDetails.Type.REAPPROVED_BACS)
                .jurorDetails(FilterableJurorDetailsResponseDto.builder()
                    .jurorNumber("200106974")
                    .jurorVersion(42_257L)
                    .nameDetails(NameDetails.builder()
                        .title("Ms")
                        .firstName("Josh")
                        .lastName("Gallus")
                        .build())
                    .paymentDetails(PaymentDetails.builder()
                        .sortCode("901234")
                        .bankAccountName("Josh Gallus")
                        .bankAccountNumber("12345678")
                        .buildingSocietyRollNumber(null)
                        .build())
                    .address(JurorAddressDto.builder()
                        .lineOne("68 EWP Junction")
                        .lineTwo("Box Number 0")
                        .lineThree("Canterbury")
                        .town("Shetland (Zetland)")
                        .county(null)
                        .postcode("BB2 2TG")
                        .build())
                    .mileage(11)
                    .build())
                .originalJurorDetails(null)
                .submittedAt(LocalDateTime.parse("2024-04-22T12:38:15.223"))
                .submittedBy(UserDetailsSimpleDto.builder()
                    .username("test_court_standard")
                    .email("test_court_standard@email.gov.uk")
                    .name("Court Standard")
                    .build())
                .approvedAt(LocalDateTime.parse("2024-04-23T12:39:17.146"))
                .approvedBy(UserDetailsSimpleDto.builder()
                    .username("test_court_manager")
                    .email("test_court_manager@email.gov.uk")
                    .name("Court Manager")
                    .build())
                .expenses(CombinedExpenseDetailsDto.<ExpenseDetailsWithOriginalDto>builder()
                    .expenseDetails(List.of(ExpenseDetailsWithOriginalDto.builder()
                            .original(
                                ExpenseDetailsWithTotalsDto.builder()
                                    .attendanceDate(LocalDate.parse("2024-03-25"))
                                    .attendanceType(AttendanceType.FULL_DAY)
                                    .paymentMethod(PaymentMethod.BACS)
                                    .lossOfEarnings(new BigDecimal("22.00"))
                                    .extraCare(BigDecimal.ZERO)
                                    .other(BigDecimal.ZERO)
                                    .publicTransport(new BigDecimal("0.00"))
                                    .taxi(new BigDecimal("0.00"))
                                    .motorcycle(BigDecimal.ZERO)
                                    .car(new BigDecimal("4.38"))
                                    .bicycle(BigDecimal.ZERO)
                                    .parking(new BigDecimal("0.00"))
                                    .foodAndDrink(new BigDecimal("5.71"))
                                    .smartCard(BigDecimal.ZERO)
                                    .build()
                            )
                            .attendanceDate(LocalDate.parse("2024-03-25"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(new BigDecimal("10.00"))
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.78"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("5.71"))
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(ExpenseDetailsWithTotalsDto.builder()
                                .attendanceDate(LocalDate.parse("2024-03-26"))
                                .attendanceType(AttendanceType.FULL_DAY)
                                .paymentMethod(PaymentMethod.BACS)
                                .lossOfEarnings(new BigDecimal("22.00"))
                                .extraCare(BigDecimal.ZERO)
                                .other(BigDecimal.ZERO)
                                .publicTransport(new BigDecimal("0.00"))
                                .taxi(new BigDecimal("0.00"))
                                .motorcycle(BigDecimal.ZERO)
                                .car(new BigDecimal("4.38"))
                                .bicycle(BigDecimal.ZERO)
                                .parking(new BigDecimal("0.00"))
                                .foodAndDrink(new BigDecimal("12.17"))
                                .smartCard(BigDecimal.ZERO)
                                .build()
                            )
                            .attendanceDate(LocalDate.parse("2024-03-26"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(new BigDecimal("10.00"))
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.78"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("12.17"))
                            .smartCard(BigDecimal.ZERO)
                            .build(),
                        ExpenseDetailsWithOriginalDto.builder()
                            .original(
                                ExpenseDetailsWithTotalsDto.builder()
                                    .attendanceDate(LocalDate.parse("2024-03-27"))
                                    .attendanceType(AttendanceType.FULL_DAY)
                                    .paymentMethod(PaymentMethod.BACS)
                                    .lossOfEarnings(new BigDecimal("22.00"))
                                    .extraCare(BigDecimal.ZERO)
                                    .other(BigDecimal.ZERO)
                                    .publicTransport(new BigDecimal("0.00"))
                                    .taxi(new BigDecimal("0.00"))
                                    .motorcycle(BigDecimal.ZERO)
                                    .car(new BigDecimal("4.38"))
                                    .bicycle(BigDecimal.ZERO)
                                    .parking(new BigDecimal("0.00"))
                                    .foodAndDrink(new BigDecimal("0.00"))
                                    .smartCard(new BigDecimal("1.00"))
                                    .build()
                            )
                            .attendanceDate(LocalDate.parse("2024-03-27"))
                            .attendanceType(AttendanceType.FULL_DAY)
                            .paymentMethod(PaymentMethod.BACS)
                            .lossOfEarnings(new BigDecimal("22.00"))
                            .extraCare(new BigDecimal("10.00"))
                            .other(BigDecimal.ZERO)
                            .publicTransport(new BigDecimal("0.00"))
                            .taxi(new BigDecimal("0.00"))
                            .motorcycle(BigDecimal.ZERO)
                            .car(new BigDecimal("4.78"))
                            .bicycle(BigDecimal.ZERO)
                            .parking(new BigDecimal("0.00"))
                            .foodAndDrink(new BigDecimal("0.00"))
                            .smartCard(new BigDecimal("1.00"))
                            .build()))
                    .total(ExpenseTotal.<ExpenseDetailsWithOriginalDto>builder()
                        .totalDays(3)
                        .lossOfEarnings(new BigDecimal("66.00"))
                        .extraCare(new BigDecimal("30.00"))
                        .other(BigDecimal.ZERO)
                        .publicTransport(new BigDecimal("0.00"))
                        .taxi(new BigDecimal("0.00"))
                        .motorcycle(BigDecimal.ZERO)
                        .car(new BigDecimal("14.34"))
                        .bicycle(BigDecimal.ZERO)
                        .parking(new BigDecimal("0.00"))
                        .foodAndDrink(new BigDecimal("17.88"))
                        .smartCard(new BigDecimal("1.00"))
                        .totalPaid(new BigDecimal("127.22"))
                        .totalDue(new BigDecimal("127.22"))
                        .build())
                    .build())
                .build());

    }
}
